service: celsus-contacts

plugins:
  - serverless-python-requirements # For python dependencies packaging

custom:
  config: ${file(./infra.json)}
  pythonRequirements: # For python dependencies packaging
    dockerizePip: true
    slim: true

provider:
  name: aws
  runtime: python3.8
  versionFunctions: false
  memorySize: 1024
  region: ${self:custom.config.region}
  stage: ${self:custom.config.environment}
  profile: serverless-admin-profile
  timeout: 30
  # >>> Lambda has to live in VPC in order to access RDS
  role: ${self:custom.config.lambdaExecutionRoleArn}
  vpc:
    securityGroupIds:
      - ${self:custom.config.coreStorageSecurityGroup} # To access the RDS instance
      - ${self:custom.config.mainVPCDefaultSecurityGroup} # To publish to SNS via the VPC Endpoint
    subnetIds:
      - ${self:custom.config.mainVPCSubnet2}
  # <<< Lambda has to live in VPC in order to access RDS

  environment:
    PGUSER: ${ssm:contact_storage_username_${self:provider.stage}~true}
    PGPASSWORD: ${ssm:contact_storage_password_${self:provider.stage}~true}
    PGHOST: ${ssm:contact_storage_hostname_${self:provider.stage}~true}
    PGPORT: ${ssm:contact_storage_port_${self:provider.stage}~true}
    PGDATABASE: ${ssm:contact_storage_database_${self:provider.stage}~true}
    PGSCHEMA: ${ssm:contact_storage_schema_${self:provider.stage}~true}
    REGION: ${self:custom.config.region}
    LOG_LEVEL: info

package:
  exclude:
    - .vscode/**
    - .travis.yml
    - package.json
    - package-lock.json
    - node_modules/**
    - tests/**
    - conftest.py
    - pytest.ini

functions:
  postContact:
    handler: contacts/handler.post_contact
    name: post-contact
  getContacts:
    handler: contacts/handler.get_contacts
    name: get-contacts
  getContact:
    handler: contacts/handler.get_contact
    name: get-contact
  deleteContact:
    handler: contacts/handler.delete_contact
    name: delete-contact
  handleMessages:
    handler: contacts/handler.handle_messages
    name: handle-contacts-messages
    events:
      - sqs:
          arn: ${self:custom.config.contactsQueueArn}
          batchSize: 1
